# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: option_theo.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'option_theo.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11option_theo.proto\x12\x0fKohinoor.Protos\"\x8b\x0b\n\nOptionTheo\x12\x0f\n\x07seq_num\x18\x01 \x01(\r\x12\x11\n\tsend_time\x18\x02 \x01(\x04\x12\x16\n\x0e\x66ramework_time\x18\x03 \x01(\x04\x12\x1a\n\x12\x63\x61ll_instrument_id\x18\x04 \x01(\x04\x12\x19\n\x11put_instrument_id\x18\x05 \x01(\x04\x12\x0e\n\x06strike\x18\x06 \x01(\x01\x12\x0f\n\x07\x66orward\x18\x07 \x01(\x01\x12\x10\n\x08\x64iscount\x18\x08 \x01(\x01\x12\x16\n\x0e\x62id_price_call\x18\t \x01(\x01\x12\x19\n\x11\x62id_quantity_call\x18\n \x01(\x03\x12\x16\n\x0e\x61sk_price_call\x18\x0b \x01(\x01\x12\x19\n\x11\x61sk_quantity_call\x18\x0c \x01(\x03\x12\x16\n\x0e\x65st_price_call\x18\r \x01(\x01\x12\x15\n\rbid_price_put\x18\x0e \x01(\x01\x12\x18\n\x10\x62id_quantity_put\x18\x0f \x01(\x03\x12\x15\n\rask_price_put\x18\x10 \x01(\x01\x12\x18\n\x10\x61sk_quantity_put\x18\x11 \x01(\x03\x12\x15\n\rest_price_put\x18\x12 \x01(\x01\x12\x12\n\nexpiration\x18\x13 \x01(\x04\x12\x0b\n\x03vol\x18\x14 \x01(\x01\x12\n\n\x02\x64\x30\x18\x15 \x01(\x01\x12\x0b\n\x03tte\x18\x16 \x01(\x01\x12\x14\n\x0c\x66it_norm_vol\x18\x17 \x01(\x01\x12\x0f\n\x07\x66it_vol\x18\x18 \x01(\x01\x12\x1f\n\x17\x66it_norm_vol_dlogstrike\x18\x19 \x01(\x01\x12 \n\x18\x66it_norm_vol_dlogstrike2\x18\x1a \x01(\x01\x12\x16\n\x0e\x66it_price_call\x18\x1b \x01(\x01\x12\x15\n\rfit_price_put\x18\x1c \x01(\x01\x12\x16\n\x0e\x66it_delta_call\x18\x1d \x01(\x01\x12\x15\n\rfit_delta_put\x18\x1e \x01(\x01\x12\x15\n\rfit_vega_call\x18\x1f \x01(\x01\x12\x14\n\x0c\x66it_vega_put\x18  \x01(\x01\x12\x16\n\x0e\x66it_gamma_call\x18! \x01(\x01\x12\x15\n\rfit_gamma_put\x18\" \x01(\x01\x12\x16\n\x0e\x66it_charm_call\x18# \x01(\x01\x12\x15\n\rfit_charm_put\x18$ \x01(\x01\x12\x16\n\x0e\x66it_vanna_call\x18% \x01(\x01\x12\x15\n\rfit_vanna_put\x18& \x01(\x01\x12\x1b\n\x13\x66it_skew_delta_call\x18\' \x01(\x01\x12\x1a\n\x12\x66it_skew_delta_put\x18( \x01(\x01\x12\x1b\n\x13\x66it_skew_gamma_call\x18) \x01(\x01\x12\x1a\n\x12\x66it_skew_gamma_put\x18* \x01(\x01\x12\x16\n\x0e\x66it_theta_call\x18+ \x01(\x01\x12\x15\n\rfit_theta_put\x18, \x01(\x01\x12\x1a\n\x12\x66it_vol_theta_call\x18- \x01(\x01\x12\x19\n\x11\x66it_vol_theta_put\x18. \x01(\x01\x12\x1c\n\x14probability_itm_call\x18/ \x01(\x01\x12\x1b\n\x13probability_itm_put\x18\x30 \x01(\x01\x12\x13\n\x0bimplied_pdf\x18\x31 \x01(\x01\x12\x10\n\x08vcr_base\x18\x32 \x01(\x01\x12\x1c\n\x14vcr_slope_multiplier\x18\x33 \x01(\x01\x12\x11\n\tvcr_total\x18\x34 \x01(\x01\x12\x0f\n\x07\x61tm_vol\x18\x35 \x01(\x01\x12\x1a\n\x12\x61tm_vol_dlogstrike\x18\x36 \x01(\x01\x12\x16\n\x0evol_dlogstrike\x18\x37 \x01(\x01\x12\x17\n\x0fvol_dlogstrike2\x18\x38 \x01(\x01\x12\x17\n\x0fvol_dlogforward\x18\x39 \x01(\x01\x12\x18\n\x10vol_dlogforward2\x18: \x01(\x01\x12\x14\n\x0clogmoneyness\x18; \x01(\x01\x12\x12\n\nunderlying\x18< \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'option_theo_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_OPTIONTHEO']._serialized_start=39
  _globals['_OPTIONTHEO']._serialized_end=1458
# @@protoc_insertion_point(module_scope)
